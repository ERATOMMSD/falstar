(define-system AT
  	(simulink "src/test/simulink/automatic_transmission.slx")
  	(parameters)
  	(inputs  throttle brake)
  	(outputs speed RPM gear)
  	(piecewise-constant throttle 0 100)
  	(piecewise-constant brake    0 325)
  	)

(select-system AT)
(set-log "results/arch2014/at.csv")
(set-report "results/arch2014/at-summary.csv")
(set-seed 0)

(set-repeat 5)

(define g1 (== gear 1))
(define g2 (== gear 2))
(define g3 (== gear 3))
(define g4 (== gear 4))

(define phi0a  (always (0  5) (< speed 60)))
(define phi0b  (always (0 10) (< speed 90)))
(define phi0c  (always (0 20) (< speed 120)))
(define phi0d  (always (0 30) (< speed 135)))
(define phi0e  (always (0 50) (< speed 150)))

(define phi1a  (always (0  5) (< RPM  4600)))
(define phi1b  (always (0 10) (< RPM  4750)))
(define phi1c  (always (0 20) (< RPM  4750)))
(define phi1d  (always (0 30) (< RPM  4750)))
(define phi1e  (always (0 50) (< RPM  4800)))

(define phi3   (always (0 30) (implies (and g2 (next g1)) (next (always (0 2.5) (not g2))))))
(define phi4   (always (0 30) (implies (and (not g1) (next g1)) (next (always (0 2.5) g1)))))

(define phi5a  (always (0 30) (implies (and (not g2) (next g2)) (next (always (0 2.5) g2)))))
(define phi5b  (always (0 30) (implies (and (not g3) (next g3)) (next (always (0 2.5) g3)))))
(define phi5c  (always (0 30) (implies (and (not g4) (next g4)) (next (always (0 2.5) g4)))))
(define phi5   (and phi5a phi5b phi5c))

(define phi6a  (implies (always (0 30) (< RPM 4500)) (always (0  4) (< speed  50))))
(define phi6b  (implies (always (0 30) (< RPM 4500)) (always (0  8) (< speed  75))))
(define phi6c  (implies (always (0 30) (< RPM 4500)) (always (0 20) (< speed 100))))

(define phi6d  (implies (always (0 30) (< RPM 3000)) (always (0  4) (< speed  40))))
(define phi6e  (implies (always (0 30) (< RPM 3000)) (always (0  8) (< speed  55))))
(define phi6f  (implies (always (0 30) (< RPM 3000)) (always (0 20) (< speed  70))))

(define phi6g  (implies (always (0 30) (< RPM 2500)) (always (0  4) (< speed  30))))
(define phi6h  (implies (always (0 30) (< RPM 2500)) (always (0  8) (< speed  45))))
(define phi6i  (implies (always (0 30) (< RPM 2500)) (always (0 20) (< speed  60))))

(set-requirements
  phi0a phi0b phi0c phi0d phi0e
  phi1a phi1b phi1c phi1d phi1e
  phi3  phi4
  phi5a phi5b phi5c phi5
  phi6a phi6b phi6c
  phi6d phi6e phi6f
  phi6g phi6h phi6i)

(set-solver random 4 100)
(falsify)

(set-solver adaptive (2 2 3 3 3 4) 0.25 100)
(falsify)

(set-solver breach 4 cmaes 100)
(falsify)


